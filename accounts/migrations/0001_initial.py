# Generated by Django 4.2 on 2023-05-09 01:18

import accounts.managers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=250, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=250, verbose_name='last_name')),
                ('phone', models.CharField(max_length=200, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+2341234567890'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='email')),
                ('location', models.CharField(max_length=300, null=True, verbose_name='location')),
                ('organisation', models.CharField(max_length=300, null=True, verbose_name='organisation')),
                ('category', models.CharField(max_length=300, null=True, verbose_name='category')),
                ('role', models.CharField(max_length=100, null=True, verbose_name='role')),
                ('password', models.CharField(max_length=100, null=True, verbose_name='password')),
                ('open_password', models.CharField(max_length=100, null=True, verbose_name='open_password')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_admin', models.BooleanField(default=False, verbose_name='admin')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mapped_users', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
    ]
